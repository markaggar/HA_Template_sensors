# Water Sessions Tracking Package for Home Assistant
#
# Place this file in a folder (e.g. packages/Water Sessions/water_sessions.yaml)
# and include in configuration.yaml using:
# homeassistant:
#   packages: !include_dir_named packages
#
# Prerequisite: sensor.droplet_flow_rate must exist (in gal/min).
#
# All customization (thresholds, etc) are at the top of this file.

sensor:
  # 1. High Flow Only Rate Sensor (filters out low GPM events)
  - platform: template
    sensors:
      water_high_flow_only_rate:
        friendly_name: "High Flow Water Only Rate"
        unit_of_measurement: 'gal/min'
        value_template: >
          {% set threshold = 1.0 %}  # Set your low-flow cutoff in gal/min here
          {% set flow_sensor = 'sensor.droplet_flow_rate' %}  # Your water flow sensor entity_id
          {% set fr = states(flow_sensor) | float(0) %}
          {{ fr if fr >= threshold else 0 }}

  # 2. Integration sensor for high flow (set unit_time to 'min' for gallons/min flow sensors)
  - platform: integration
    source: sensor.water_high_flow_only_rate
    name: high_flow_water_used
    unit_prefix: gal
    round: 2
    method: left
    unit_time: min

template:
  # 3. Main Session Template Sensor (only records sessions above threshold)
  - sensor:
      - name: "Last High Flow Water Session"
        unique_id: "last_high_flow_water_session"
        unit_of_measurement: "gallons"
        state: >
          {% set min_duration = 60 %}
          {% set min_volume = 10 %}
          {% set flow = states('sensor.water_high_flow_only_rate')|float(0) %}
          {% set integration = states('sensor.high_flow_water_used')|float(0) %}
          {% set prev_integration = this.attributes.prev_integration | default(integration) %}
          {% set session_gallons = (integration - prev_integration) | round(2) %}
          {% set session_duration = this.attributes.session_duration | default(0) %}
          {% set last_session_gallons = this.attributes.last_session_gallons | default(0) %}
          {% if flow == 0 and session_duration|float(0) >= min_duration and session_gallons >= min_volume %}
            {{ session_gallons }}
          {% else %}
            {{ last_session_gallons }}
          {% endif %}
        attributes:
          session_start_time: >
            {% set flow = states('sensor.water_high_flow_only_rate')|float(0) %}
            {% set prev_start = this.attributes.session_start_time | default(now().isoformat()) %}
            {% if flow > 0 %}
              {% if this.attributes.session_start_time is defined and prev_start != "" %}
                {{ prev_start }}
              {% else %}
                {{ now().isoformat() }}
              {% endif %}
            {% else %}
              {{ now().isoformat() }}
            {% endif %}
          session_duration: >
            {% set flow = states('sensor.water_high_flow_only_rate')|float(0) %}
            {% set start = this.attributes.session_start_time | default(now().isoformat()) %}
            {% if flow > 0 %}
              {{ (as_timestamp(now()) - as_timestamp(start)) | int }}
            {% else %}
              0
            {% endif %}
          last_session_duration: >
            {% set flow = states('sensor.water_high_flow_only_rate')|float(0) %}
            {% set prev_last = this.attributes.last_session_duration | default(0) %}
            {% set session_duration = this.attributes.session_duration | default(0) %}
            {% set session_gallons = this.attributes.session_gallons | default(0) %}
            {% set min_volume = 10 %}
            {% if flow == 0 and session_duration|float(0) >= 60 and session_gallons >= min_volume %}
              {{ session_duration }}
            {% else %}
              {{ prev_last }}
            {% endif %}
          session_gallons: >
            {% set flow = states('sensor.water_high_flow_only_rate')|float(0) %}
            {% set integration = states('sensor.high_flow_water_used')|float(0) %}
            {% set prev_integration = this.attributes.prev_integration | default(integration) %}
            {% if flow > 0 %}
              {{ (integration - prev_integration) | round(2) }}
            {% else %}
              0
            {% endif %}
          last_session_gallons: >
            {% set flow = states('sensor.water_high_flow_only_rate')|float(0) %}
            {% set prev_last = this.attributes.last_session_gallons | default(0) %}
            {% set integration = states('sensor.high_flow_water_used')|float(0) %}
            {% set prev_integration = this.attributes.prev_integration | default(integration) %}
            {% set session_gallons = (integration - prev_integration) | round(2) %}
            {% set session_duration = this.attributes.session_duration | default(0) %}
            {% set min_volume = 10 %}
            {% if flow == 0 and session_duration|float(0) >= 60 and session_gallons >= min_volume %}
              {{ session_gallons }}
            {% else %}
              {{ prev_last }}
            {% endif %}
          prev_integration: >
            {% set flow = states('sensor.water_high_flow_only_rate')|float(0) %}
            {% set integration = states('sensor.high_flow_water_used')|float(0) %}
            {% set prev_integration = this.attributes.prev_integration | default(integration) %}
            {% set session_duration = this.attributes.session_duration | default(0) %}
            {% set session_gallons = this.attributes.session_gallons | default(0) %}
            {% set min_volume = 10 %}
            {% if flow == 0 and session_duration|float(0) >= 60 and session_gallons >= min_volume %}
              {{ integration }}
            {% else %}
              {{ prev_integration }}
            {% endif %}
          min_session_volume: 10
