# Generalized Home Assistant sensor for marginal water rate per sensor's usage unit (e.g., $/gallon, $/litre, $/cubic_feet, $/cubic_meter)
# Handles: any input unit, billing in CCF or CM, tiers, summer surcharge, maintenance charge, and debug output.
template:
  - sensor:
      - name: "Current Water Rate per Usage Unit"
        unique_id: current_water_rate_per_usage_unit
        state: >
          {# --- USER CONFIG --- #}
          {%- set raw_value = states('sensor.droplet_water_volume') | float(0) -%}
          {%- set usage_unit = 'gallons' -%}    {# e.g., 'gallons', 'litres', 'cubic_feet', 'cubic_meters', 'CCF', 'CM' #}
          {%- set rate_unit = 'CCF' -%}         {# 'CCF' (Centum Cubic Feet) or 'CM' (Cubic Meter) #}
          {%- set summer_months = [6,7,8,9] -%} {# June=6 ... September=9 #}
          {%- set is_summer = now().month in summer_months -%}
          {%- set maintenance_base = 6 -%}      {# in CCF or CM #}
          {%- set maintenance_rate = 9.97 -%}
          {%- set tiers = [
            {'min': 0,   'max': 10,   'rate': 6.11},
            {'min': 10,  'max': 20,   'rate': 10.34},
            {'min': 20,  'max': 30,   'rate': 12.41},
            {'min': 30,  'max': 999999999, 'rate': 16.69}
          ] -%}
          {%- set summer_surcharge = [
            {'min': 20, 'max': 30, 'rate': 0.10},
            {'min': 30, 'max': 999999999, 'rate': 0.30}
          ] -%}
          {%- set debug_mode = false -%}
          {# --- CONVERSION TABLE --- #}
          {%- set convert = {
            'gallons':      {'CCF': 0.00133681, 'CM': 0.00378541},
            'litres':       {'CCF': 0.000353147, 'CM': 0.001},
            'cubic_feet':   {'CCF': 0.01, 'CM': 0.0283168},
            'cubic_meters': {'CCF': 0.353147, 'CM': 1.0},
            'CCF':          {'CCF': 1.0, 'CM': 2.83168},
            'CM':           {'CCF': 0.353147, 'CM': 1.0}
          } -%}
          {%- if usage_unit not in convert or rate_unit not in convert[usage_unit] -%}
            {{ 0 }}
          {%- else -%}
            {%- set usage_billing = raw_value * convert[usage_unit][rate_unit] -%}
            {# Use namespace for tier and label #}
            {%- set ns = namespace(tier_rate=0, tier_label='unknown') %}
            {%- for t in tiers %}
              {%- if usage_billing >= t.min and usage_billing < t.max %}
                {%- set ns.tier_rate = t.rate %}
                {%- set ns.tier_label = 'Tier ' ~ loop.index %}
              {%- endif %}
            {%- endfor %}
            {# Summer surcharge using namespace #}
            {%- set ns_s = namespace(surcharge=0) %}
            {%- if is_summer %}
              {%- for s in summer_surcharge %}
                {%- if usage_billing >= s.min and usage_billing < s.max %}
                  {%- set ns_s.surcharge = s.rate %}
                {%- endif %}
              {%- endfor %}
            {%- endif %}
            {# Maintenance charge if at/above base #}
            {%- set maintenance = maintenance_rate if usage_billing >= maintenance_base else 0 -%}
            {%- set marginal_rate = ns.tier_rate + ns_s.surcharge + maintenance %}
            {# --- CONVERT MARGINAL RATE TO USAGE UNIT --- #}
            {%- set billing_to_usage = {
              ('CCF', 'gallons'): 748.051,
              ('CCF', 'litres'): 2831.68,
              ('CCF', 'cubic_feet'): 100,
              ('CCF', 'cubic_meters'): 2.83168,
              ('CM', 'gallons'): 264.172,
              ('CM', 'litres'): 1000,
              ('CM', 'cubic_feet'): 35.3147,
              ('CM', 'cubic_meters'): 1,
              ('CCF', 'CCF'): 1,
              ('CM', 'CM'): 1
            } %}
            {%- set units_per_billing = billing_to_usage.get((rate_unit, usage_unit), 1) %}
            {%- set rate_per_usage = marginal_rate / units_per_billing if units_per_billing > 0 else 0 %}
            {%- if debug_mode %}
              {{ {
                'raw_value': raw_value,
                'usage_unit': usage_unit,
                'rate_unit': rate_unit,
                'usage_in_billing_unit': usage_billing,
                'season': 'summer' if is_summer else 'winter',
                'current_tier': ns.tier_label,
                'tier_rate': ns.tier_rate,
                'surcharge': ns_s.surcharge,
                'maintenance': maintenance,
                'marginal_rate': marginal_rate,
                'units_per_billing': units_per_billing,
                'rate_per_usage': rate_per_usage
              } | to_json }}
            {%- else %}
              {{ rate_per_usage | round(8) }}
            {%- endif %}
          {%- endif %}
        unit_of_measurement: >
          $/{{ usage_unit }}
        attributes:
          marginal_rate_in_billing_unit: >
            {%- set raw_value = states('sensor.droplet_water_volume') | float(0) -%}
            {%- set usage_unit = 'gallons' -%}
            {%- set rate_unit = 'CCF' -%}
            {%- set summer_months = [6,7,8,9] -%}
            {%- set is_summer = now().month in summer_months -%}
            {%- set maintenance_base = 6 -%}
            {%- set maintenance_rate = 9.97 -%}
            {%- set tiers = [
              {'min': 0,   'max': 10,   'rate': 6.11},
              {'min': 10,  'max': 20,   'rate': 10.34},
              {'min': 20,  'max': 30,   'rate': 12.41},
              {'min': 30,  'max': 9999, 'rate': 16.69}
            ] %}
            {%- set summer_surcharge = [
              {'min': 20, 'max': 30, 'rate': 0.10},
              {'min': 30, 'max': 9999, 'rate': 0.30}
            ] %}
            {%- set convert = {
              'gallons':      {'CCF': 0.00133681, 'CM': 0.00378541},
              'litres':       {'CCF': 0.000353147, 'CM': 0.001},
              'cubic_feet':   {'CCF': 0.01, 'CM': 0.0283168},
              'cubic_meters': {'CCF': 0.353147, 'CM': 1.0},
              'CCF':          {'CCF': 1.0, 'CM': 2.83168},
              'CM':           {'CCF': 0.353147, 'CM': 1.0}
            } %}
            {%- set usage_billing = raw_value * convert[usage_unit][rate_unit] -%}
            {%- set ns = namespace(tier_rate=0) %}
            {%- for t in tiers %}
              {%- if usage_billing >= t.min and usage_billing < t.max %}
                {%- set ns.tier_rate = t.rate %}
              {%- endif %}
            {%- endfor %}
            {%- set ns_s = namespace(surcharge=0) %}
            {%- if is_summer %}
              {%- for s in summer_surcharge %}
                {%- if usage_billing >= s.min and usage_billing < s.max %}
                  {%- set ns_s.surcharge = s.rate %}
                {%- endif %}
              {%- endfor %}
            {%- endif %}
            {%- set maintenance = maintenance_rate if usage_billing >= maintenance_base else 0 -%}
            {{ (ns.tier_rate + ns_s.surcharge + maintenance) | round(6) }}
          usage_in_billing_unit: >
            {%- set raw_value = states('sensor.droplet_water_volume') | float(0) -%}
            {%- set usage_unit = 'gallons' -%}
            {%- set rate_unit = 'CCF' -%}
            {%- set convert = {
              'gallons':      {'CCF': 0.00133681, 'CM': 0.00378541},
              'litres':       {'CCF': 0.000353147, 'CM': 0.001},
              'cubic_feet':   {'CCF': 0.01, 'CM': 0.0283168},
              'cubic_meters': {'CCF': 0.353147, 'CM': 1.0},
              'CCF':          {'CCF': 1.0, 'CM': 2.83168},
              'CM':           {'CCF': 0.353147, 'CM': 1.0}
            } %}
            {{ (raw_value * convert[usage_unit][rate_unit]) | round(4) if usage_unit in convert and rate_unit in convert[usage_unit] else 0 }}
          units_per_billing: >
            {%- set billing_to_usage = {
              ('CCF', 'gallons'): 748.051,
              ('CCF', 'litres'): 2831.68,
              ('CCF', 'cubic_feet'): 100,
              ('CCF', 'cubic_meters'): 2.83168,
              ('CM', 'gallons'): 264.172,
              ('CM', 'litres'): 1000,
              ('CM', 'cubic_feet'): 35.3147,
              ('CM', 'cubic_meters'): 1,
              ('CCF', 'CCF'): 1,
              ('CM', 'CM'): 1
            } %}
            {%- set usage_unit = 'gallons' -%}
            {%- set rate_unit = 'CCF' -%}
            {{ billing_to_usage.get((rate_unit, usage_unit), 1) }}
          current_tier: >
            {%- set raw_value = states('sensor.droplet_water_volume') | float(0) -%}
            {%- set usage_unit = 'gallons' -%}
            {%- set rate_unit = 'CCF' -%}
            {%- set tiers = [
              {'min': 0,   'max': 10,   'rate': 6.11},
              {'min': 10,  'max': 20,   'rate': 10.34},
              {'min': 20,  'max': 30,   'rate': 12.41},
              {'min': 30,  'max': 9999, 'rate': 16.69}
            ] %}
            {%- set convert = {
              'gallons':      {'CCF': 0.00133681, 'CM': 0.00378541},
              'litres':       {'CCF': 0.000353147, 'CM': 0.001},
              'cubic_feet':   {'CCF': 0.01, 'CM': 0.0283168},
              'cubic_meters': {'CCF': 0.353147, 'CM': 1.0},
              'CCF':          {'CCF': 1.0, 'CM': 2.83168},
              'CM':           {'CCF': 0.353147, 'CM': 1.0}
            } %}
            {%- set usage_billing = raw_value * convert[usage_unit][rate_unit] %}
            {%- set ns = namespace(tier_label='unknown') %}
            {%- for t in tiers %}
              {%- if usage_billing >= t.min and usage_billing < t.max %}
                {%- set ns.tier_label = 'Tier ' ~ loop.index %}
              {%- endif %}
            {%- endfor %}
            {{ ns.tier_label }}
          debug: >
            {%- set debug_mode = true -%}
            {%- if debug_mode %}
              {%- set raw_value = states('sensor.droplet_water_volume') | float(0) -%}
              {%- set usage_unit = 'gallons' -%}
              {%- set rate_unit = 'CCF' -%}
              {%- set summer_months = [6,7,8,9] -%}
              {%- set is_summer = now().month in summer_months -%}
              {%- set maintenance_base = 6 -%}
              {%- set maintenance_rate = 9.97 -%}
              {%- set tiers = [
                {'min': 0,   'max': 10,   'rate': 6.11},
                {'min': 10,  'max': 20,   'rate': 10.34},
                {'min': 20,  'max': 30,   'rate': 12.41},
                {'min': 30,  'max': 9999, 'rate': 16.69}
              ] %}
              {%- set summer_surcharge = [
                {'min': 20, 'max': 30, 'rate': 0.10},
                {'min': 30, 'max': 9999, 'rate': 0.30}
              ] %}
              {%- set convert = {
                'gallons':      {'CCF': 0.00133681, 'CM': 0.00378541},
                'litres':       {'CCF': 0.000353147, 'CM': 0.001},
                'cubic_feet':   {'CCF': 0.01, 'CM': 0.0283168},
                'cubic_meters': {'CCF': 0.353147, 'CM': 1.0},
                'CCF':          {'CCF': 1.0, 'CM': 2.83168},
                'CM':           {'CCF': 0.353147, 'CM': 1.0}
              } %}
              {%- set usage_billing = raw_value * convert[usage_unit][rate_unit] -%}
              {%- set ns = namespace(tier_rate=0, tier_label='unknown') %}
              {%- for t in tiers %}
                {%- if usage_billing >= t.min and usage_billing < t.max %}
                  {%- set ns.tier_rate = t.rate %}
                  {%- set ns.tier_label = 'Tier ' ~ loop.index %}
                {%- endif %}
              {%- endfor %}
              {%- set ns_s = namespace(surcharge=0) %}
              {%- if is_summer %}
                {%- for s in summer_surcharge %}
                  {%- if usage_billing >= s.min and usage_billing < s.max %}
                    {%- set ns_s.surcharge = s.rate %}
                  {%- endif %}
                {%- endfor %}
              {%- endif %}
              {%- set maintenance = maintenance_rate if usage_billing >= maintenance_base else 0 -%}
              {%- set marginal_rate = ns.tier_rate + ns_s.surcharge + maintenance %}
              {%- set billing_to_usage = {
                ('CCF', 'gallons'): 748.051,
                ('CCF', 'litres'): 2831.68,
                ('CCF', 'cubic_feet'): 100,
                ('CCF', 'cubic_meters'): 2.83168,
                ('CM', 'gallons'): 264.172,
                ('CM', 'litres'): 1000,
                ('CM', 'cubic_feet'): 35.3147,
                ('CM', 'cubic_meters'): 1,
                ('CCF', 'CCF'): 1,
                ('CM', 'CM'): 1
              } %}
              {%- set units_per_billing = billing_to_usage.get((rate_unit, usage_unit), 1) %}
              {%- set rate_per_usage = marginal_rate / units_per_billing if units_per_billing > 0 else 0 %}
              {{ {
                'raw_value': raw_value,
                'usage_unit': usage_unit,
                'rate_unit': rate_unit,
                'usage_in_billing_unit': usage_billing,
                'season': 'summer' if is_summer else 'winter',
                'current_tier': ns.tier_label,
                'tier_rate': ns.tier_rate,
                'surcharge': ns_s.surcharge,
                'maintenance': maintenance,
                'marginal_rate': marginal_rate,
                'units_per_billing': units_per_billing,
                'rate_per_usage': rate_per_usage
              } | to_json }}
            {%- else %}OFF{%- endif %}
