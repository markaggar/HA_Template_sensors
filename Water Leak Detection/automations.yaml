# Automations for Water Leak Detection v3 (Enhanced + Simplified Triggers)
# Rich notifications with direct sensor triggers (no binary sensor dependency)

- id: low_flow_leak_notify
  alias: "Low Flow Leak Notification"
  trigger:
    - platform: template
      value_template: >
        {% set min_val = state_attr('sensor.low_flow_leak_min_5m', 'min_value') %}
        {% set buf = state_attr('sensor.low_flow_leak_min_5m', 'buffer_usage_ratio') %}
        {{ min_val is number and buf is number and buf > 0.99 and min_val > 0 and min_val < 1 }}
  condition:
    - condition: state
      entity_id: input_boolean.low_flow_leak_detected
      state: "off"  # Don't spam if already acknowledged
    - condition: numeric_state
      entity_id: sensor.low_flow_leak_min_5m
      attribute: age_coverage_ratio
      above: 0.75
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.low_flow_leak_detected
    - service: notify.all_family
      data:
        message: >-
          Low-flow water detected (staying between 0-1 GPM for 5+ minutes). 
          Current minimum flow: {{ states('sensor.low_flow_leak_min_5m') | round(3) }} GPM.
          Buffer usage: {{ state_attr('sensor.low_flow_leak_min_5m', 'buffer_usage_ratio') | round(2) }}
          Age coverage: {{ state_attr('sensor.low_flow_leak_min_5m', 'age_coverage_ratio') | round(2) }}
          Please check for small leaks or dripping faucets!
        title: "Possible Persistent Low-Flow Leak"
        data:
          tag: low_flow_leak_alert
          priority: high
          channel: alarm
          actions:
            - action: "ACKNOWLEDGE_LOW_FLOW_LEAK"
              title: "Acknowledge"
  mode: single

- id: low_flow_leak_acknowledge_alert
  alias: "Low Flow Leak: Acknowledge Alert"
  trigger:
    - platform: state
      entity_id: input_button.acknowledge_low_flow_leak
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: ACKNOWLEDGE_LOW_FLOW_LEAK
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.low_flow_leak_detected

- id: low_flow_leak_clear
  alias: "Low Flow Leak Cleared"
  trigger:
    - platform: template
      value_template: >
        {% set min_val = state_attr('sensor.low_flow_leak_min_5m', 'min_value') %}
        {% set buf = state_attr('sensor.low_flow_leak_min_5m', 'buffer_usage_ratio') %}
        {{ not (min_val is number and buf is number and buf > 0.99 and min_val > 0 and min_val < 1) }}
  condition:
    - condition: state
      entity_id: input_boolean.low_flow_leak_detected
      state: "on"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.low_flow_leak_detected
    - service: notify.all_family
      data:
        message: "Low-flow leak condition cleared. Water flow has returned to normal patterns."
        title: "Low Flow Leak Cleared"
        data:
          tag: low_flow_leak_alert
          priority: default
          channel: alarm
  mode: single

- id: leaky_toilet_smart_notify
  alias: "Leaky Toilet Smart Notification"
  trigger:
    - platform: state
      entity_id: sensor.toilet_water_leak_detected
      to: "true"
  condition:
    - condition: state
      entity_id: input_boolean.leaky_toilet_smart_detected
      state: "off"  # Don't spam if already acknowledged
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.leaky_toilet_smart_detected
    - service: notify.all_family
      data:
        message: >-
          üöΩ Detected {{ state_attr('sensor.toilet_water_leak_detected', 'largest_group_count') }} repeating toilet fill patterns suggesting a leak!
          
          üìä **Burst Analysis:**
          ‚Ä¢ Similar burst count: {{ state_attr('sensor.toilet_water_leak_detected', 'largest_group_count') }}
          ‚Ä¢ Pattern window: {{ (state_attr('sensor.toilet_water_leak_detected', 'burst_window') | int / 60) | round(0) }} minutes
          ‚Ä¢ Group threshold: {{ state_attr('sensor.toilet_water_leak_detected', 'burst_group_threshold') }} gallons
          ‚Ä¢ Similar burst volumes: {{ state_attr('sensor.toilet_water_leak_detected', 'largest_group_volumes') | join(', ') }} gallons
          
          üìà **Detection Parameters:**
          ‚Ä¢ Min group size: {{ state_attr('sensor.toilet_water_leak_detected', 'burst_min_group') }}
          ‚Ä¢ Flow range: {{ state_attr('sensor.toilet_water_leak_detected', 'burst_min_flow') }}-{{ state_attr('sensor.toilet_water_leak_detected', 'burst_max_flow') }} GPM
          ‚Ä¢ Duration range: {{ state_attr('sensor.toilet_water_leak_detected', 'burst_min_duration') }}-{{ state_attr('sensor.toilet_water_leak_detected', 'burst_max_duration') }} seconds
          
          üí° This may indicate a leaky toilet valve, flapper, or fill mechanism.
        title: "Leaky Toilet Detected ({{ state_attr('sensor.toilet_water_leak_detected', 'largest_group_count') }} Similar Bursts)"
        data:
          tag: leaky_toilet_smart_alert
          priority: high
          channel: alarm
          actions:
            - action: "ACKNOWLEDGE_LEAKY_TOILET_SMART"
              title: "Acknowledge"
  mode: single

- id: leaky_toilet_smart_acknowledge_alert
  alias: "Leaky Toilet Smart: Acknowledge Alert"
  trigger:
    - platform: state
      entity_id: input_button.acknowledge_leaky_toilet_smart
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: ACKNOWLEDGE_LEAKY_TOILET_SMART
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaky_toilet_smart_detected

- id: leaky_toilet_smart_clear
  alias: "Leaky Toilet Smart Cleared"
  trigger:
    - platform: state
      entity_id: sensor.toilet_water_leak_detected
      to: "false"
  condition:
    - condition: state
      entity_id: input_boolean.leaky_toilet_smart_detected
      state: "on"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaky_toilet_smart_detected
    - service: notify.all_family
      data:
        message: >-
          ‚úÖ Leaky toilet condition cleared. No more repeated toilet fill patterns detected.
          
          üìä **Current Status:**
          ‚Ä¢ Similar burst count: {{ state_attr('sensor.toilet_water_leak_detected', 'largest_group_count') }}
          ‚Ä¢ Burst detection: {{ 'Active' if state_attr('sensor.toilet_water_leak_detected', 'session_active') else 'Inactive' }}
          ‚Ä¢ Last burst volume: {{ state_attr('sensor.toilet_water_leak_detected', 'last_burst_volume') }} gallons
        title: "Leaky Toilet Cleared (Smart)"
        data:
          tag: leaky_toilet_smart_alert
          priority: default
          channel: alarm
  mode: single

# Optional: Automation to log significant water sessions for analysis
- id: log_significant_water_sessions
  alias: "Log Significant Water Sessions"
  trigger:
    - platform: state
      entity_id: sensor.toilet_water_leak_detected
      attribute: last_burst_volume
  condition:
    - condition: template
      value_template: >
        {{ 
          trigger.to_state.attributes.last_burst_volume | float(0) > 
          trigger.from_state.attributes.last_burst_volume | float(0)
        }}
    - condition: numeric_state
      entity_id: sensor.toilet_water_leak_detected
      attribute: last_burst_volume
      above: 1  # Log sessions over 1 gallon
  action:
    - service: logbook.log
      data:
        name: "Toilet Burst Completed"
        message: >-
          üíß Toilet burst: {{ state_attr('sensor.toilet_water_leak_detected', 'last_burst_volume') }} gallons
          
          üìä Similar bursts: {{ state_attr('sensor.toilet_water_leak_detected', 'largest_group_count') }}/{{ state_attr('sensor.toilet_water_leak_detected', 'burst_min_group') }}
          üöΩ Session status: {{ 'Active' if state_attr('sensor.toilet_water_leak_detected', 'session_active') else 'Complete' }}
        entity_id: sensor.toilet_water_leak_detected
  mode: single

# Optional: Automation to alert on unusually large toilet sessions
- id: large_toilet_session_alert
  alias: "Large Toilet Session Alert"
  trigger:
    - platform: state
      entity_id: sensor.toilet_water_leak_detected
      attribute: last_burst_volume
  condition:
    - condition: template
      value_template: >
        {{ 
          trigger.to_state.attributes.last_burst_volume | float(0) > 
          trigger.from_state.attributes.last_burst_volume | float(0)
        }}
    - condition: numeric_state
      entity_id: sensor.toilet_water_leak_detected
      attribute: last_burst_volume
      above: 5  # Alert on toilet sessions over 5 gallons
  action:
    - service: notify.all_family
      data:
        message: >-
          ‚ö†Ô∏è Unusually large toilet session detected: {{ state_attr('sensor.toilet_water_leak_detected', 'last_burst_volume') }} gallons.
          
          üìä **Session Details:**
          ‚Ä¢ Flow range: {{ state_attr('sensor.toilet_water_leak_detected', 'burst_min_flow') }}-{{ state_attr('sensor.toilet_water_leak_detected', 'burst_max_flow') }} GPM
          ‚Ä¢ Duration: Within {{ state_attr('sensor.toilet_water_leak_detected', 'burst_min_duration') }}-{{ state_attr('sensor.toilet_water_leak_detected', 'burst_max_duration') }} seconds
          ‚Ä¢ Similar bursts: {{ state_attr('sensor.toilet_water_leak_detected', 'largest_group_count') }}
          
          This may indicate a toilet malfunction or stuck fill valve.
        title: "Large Toilet Session Detected"
        data:
          tag: large_toilet_session
          priority: normal
          channel: alarm
  mode: single

# Optional: Alert when toilet burst parameters are modified
- id: toilet_parameters_changed
  alias: "Toilet Detection Parameters Changed"
  trigger:
    - platform: state
      entity_id: sensor.toilet_water_leak_detected
      attribute: burst_min_flow
    - platform: state
      entity_id: sensor.toilet_water_leak_detected
      attribute: burst_max_flow
    - platform: state
      entity_id: sensor.toilet_water_leak_detected
      attribute: burst_group_threshold
    - platform: state
      entity_id: sensor.toilet_water_leak_detected
      attribute: burst_min_group
  condition:
    - condition: template
      value_template: >
        {{ trigger.from_state.attributes[trigger.attribute] != trigger.to_state.attributes[trigger.attribute] }}
  action:
    - service: logbook.log
      data:
        name: "Toilet Detection Parameter Updated"
        message: >-
          üîß Parameter {{ trigger.attribute }} changed from {{ trigger.from_state.attributes[trigger.attribute] }} 
          to {{ trigger.to_state.attributes[trigger.attribute] }}
          
          üìä **Current Settings:**
          ‚Ä¢ Flow range: {{ state_attr('sensor.toilet_water_leak_detected', 'burst_min_flow') }}-{{ state_attr('sensor.toilet_water_leak_detected', 'burst_max_flow') }} GPM
          ‚Ä¢ Group threshold: {{ state_attr('sensor.toilet_water_leak_detected', 'burst_group_threshold') }} gallons
          ‚Ä¢ Min group size: {{ state_attr('sensor.toilet_water_leak_detected', 'burst_min_group') }}
        entity_id: sensor.toilet_water_leak_detected
  mode: single
